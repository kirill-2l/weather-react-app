{"version":3,"sources":["components/City/CityHeader.jsx","components/City/index.jsx","components/AddBtn/index.jsx","components/CitiesList/index.jsx","components/Logo/index.jsx","components/AddCity/index.jsx","App.js","index.js"],"names":["CityHeader","photo","className","style","backgroundImage","City","cities","formateTime","unixTime","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","map","city","key","cityId","path","name","title","description","timezone","Math","ceil","temp","feelsLike","windSpeed","sunrise","sunset","AddBtn","fill","viewBox","xmlns","fillRule","clipRule","d","CitiesList","citiesList","onClickItem","activeItem","item","onClick","classNames","to","Logo","AddCity","addCity","useState","selectedId","setSelectedId","value","setValue","suggestions","setSuggestions","DB","countryId","id","country","inputProps","placeholder","onChange","event","newValue","onSuggestionsFetchRequested","inputValue","trim","toLowerCase","inputLength","length","filter","slice","getSuggestions","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","shouldRenderSuggestions","highlightFirstSuggestion","onSuggestionSelected","App","setCitiesList","setActiveItem","history","useHistory","getWeather","a","async","axios","get","res","data","console","log","getPhoto","cityName","results","useEffect","activeCityId","location","pathname","split","activeCity","find","Number","push","exact","alert","weather","newItem","wind","speed","main","feels_like","sys","random","urls","regular","newList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.019913da.chunk.js","sourcesContent":["import React from 'react'\n\n// import cityBg from '../../assets/img/city-bg.png';\n\nconst CityHeader = ({photo}) => {\n  return (\n    <div className=\"city__photo\" style={{ backgroundImage: `url(${photo})` }}></div>\n  )\n}\n\nexport default CityHeader;\n","import React, { Fragment } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport CityHeader from \"./CityHeader\";\n\nconst City = ({ cities }) => {\n\n  const formateTime = (unixTime) => {\n    let date = new Date(unixTime * 1000);\n    let hours = date.getHours();\n    // Minutes part from the timestamp\n    let minutes = \"0\" + date.getMinutes();\n    // Seconds part from the timestamp\n    let seconds = \"0\" + date.getSeconds();\n\n    // Will display time in 10:30:23 format\n    let formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    return formattedTime;\n  }\n\n  return (\n    <Fragment>\n      {cities.map(city => {\n        return (\n          <Route key={city.cityId} path={`/city/${city.cityId}`}>\n            <CityHeader photo={city.photo} />\n            <div className=\"city__content\">\n              <div className=\"city__header\">\n                <div className=\"city__header-name\">{city.name}</div>\n              </div>\n              <div className=\"city__body\">\n                <div className=\"city__text-block\">\n                  <div className=\"city__text-title\">{city.title}</div>\n                  <div className=\"city__text-descr\">{city.description}</div>\n                </div>\n                <div className=\"city__time\">{`UTC ${city.timezone > 0 ? `+${city.timezone / 3600}` : `${city.timezone / 3600}`}`}</div>\n                <div className=\"city__props-block\">\n                  <ul className=\"city__props-list\">\n                    <li className=\"city__props-item\">\n                      <span className=\"city__prop\">Temp</span>\n                      <span className=\"city__prop-value\">\n                        {Math.ceil(city.temp - 273.15)}&#176;\n                      </span>\n                    </li>\n                    <li className=\"city__props-item\">\n                      <span className=\"city__prop\">Feels like</span>\n                      <span className=\"city__prop-value\">\n                        {Math.ceil(city.feelsLike - 273.15)}&#176;\n                      </span>\n                    </li>\n                    <li className=\"city__props-item\">\n                      <span className=\"city__prop\">Wind speed</span>\n                      <span className=\"city__prop-value\">\n                        {Math.ceil(city.windSpeed)} m/s\n                      </span>\n                    </li>\n                  </ul>\n                  <ul className=\"city__props-list\">\n                    <li className=\"city__props-item\">\n                      <span className=\"city__prop\">Sunrise</span>\n                      <span className=\"city__prop-value\">\n                        {formateTime(city.sunrise)}\n                      </span>\n                    </li>\n                    <li className=\"city__props-item\">\n                      <span className=\"city__prop\">Sunset</span>\n                      <span className=\"city__prop-value\">\n                      {formateTime(city.sunset)}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </Route>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nexport default City;\n","import React from 'react'\n\nconst AddBtn = () => {\n  return (\n    <div className=\"cities-list__add-btn add-btn\">\n      <svg\n        className=\"add-btn__icon\"\n        fill=\"none\"\n        viewBox=\"0 0 20 20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11 9H20V11H11V20H9V11H0V9H9V0H11V9Z\"\n        />\n      </svg>\n\n      <span className=\"add-btn__text\">Add city</span>\n    </div>\n  )\n}\n\nexport default AddBtn;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"react-router-dom\";\n\nimport AddBtn from \"../AddBtn\";\n\nconst CitiesList = ({ citiesList, onClickItem, activeItem }) => {\n  return (\n    <div className=\"sidebar__list cities-list\">\n      <ul className=\"cities-list__block\">\n        {citiesList.map(item => {\n          return (\n            <li\n              onClick={() => onClickItem(item)}\n              key={item.cityId}\n              className={classNames(\"cities-list__item\", {\n                \"cities-list__item--active\":\n                  activeItem && item.cityId === activeItem.cityId\n              })}\n            >\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n      <Link to=\"/\">\n      <AddBtn />\n      </Link>\n    </div>\n  );\n};\n\nexport default CitiesList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Logo = () => {\n  return (\n    <div className=\"sidebar__logo logo\">\n      <Link to=\"/\">\n        <span className=\"logo__first-letter\">W</span>\n        <span className=\"logo__first-txt\">heatherApp</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React, { useState } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\n\nimport DB from \"../../assets/city.list.min.json\";\n\nconst AddCity = ({ addCity }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n\n  const cities = DB.map(item => {\n    return {\n      name: item.name,\n      countryId: item.id,\n      country: item.country\n    };\n  });\n\n  const getSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n\n    return inputLength === 0\n      ? []\n      : cities.filter(\n          city => city.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n  };\n\n  const getSuggestionValue = suggestion => suggestion.name;\n\n  const renderSuggestion = suggestion => {\n    return (\n      <div className=\"react-autosuggest__suggestion-item\">\n        <div className=\"react-autosuggest__suggestion-name\">{suggestion.name}</div>\n        <div className=\"react-autosuggest__suggestion-country\">{suggestion.country}</div>\n      </div>\n    );\n  };\n\n  const handleChange = (event, { newValue }) => {\n    setValue(newValue);\n  };\n\n  const onSuggestionsFetchRequested = ({ value }) => {\n    setSuggestions(getSuggestions(value));\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const shouldRenderSuggestions = value => {\n    return value.trim().length > 2;\n  };\n  const onSuggestionSelected = (event, { suggestion }) => {\n    setSelectedId(suggestion.countryId);\n  };\n  const inputProps = {\n    placeholder: \"Type a city name\",\n    value,\n    onChange: handleChange\n  };\n\n  return (\n    <div className=\"add-city\">\n      <div className=\"add-city__wrapper\">\n        <h3 className=\"add-city__title\">Add new City to List</h3>\n        <Autosuggest\n          suggestions={suggestions}\n          onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={onSuggestionsClearRequested}\n          getSuggestionValue={getSuggestionValue}\n          renderSuggestion={renderSuggestion}\n          inputProps={inputProps}\n          shouldRenderSuggestions={shouldRenderSuggestions}\n          highlightFirstSuggestion={true}\n          onSuggestionSelected={onSuggestionSelected}\n        />\n        <button\n          onClick={() => (selectedId ? addCity(selectedId) : false)}\n          className=\"add-city__btn\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddCity;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Route, useHistory, Redirect } from \"react-router-dom\";\n\nimport { Logo, CitiesList, City, AddCity } from \"./components\";\n\nfunction App() {\n  const [citiesList, setCitiesList] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n\n  let history = useHistory();\n\n  const getWeather = async cityId => {\n    const apiKey = \"e9f4e35f4de8fa1f2f0a9fb7e73e642c\";\n    try {\n      let res = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?id=${cityId}&appid=${apiKey}`\n      );\n      return res.data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const getPhoto = async cityName => {\n    const apiKey =\n      \"b5cfa9a93266cdd8a6ea18e70aa719f9528a09f66a96b8a45bf2d90342c42ea2\";\n    try {\n      let res = await axios.get(\n        `https://api.unsplash.com/search/photos/?client_id=${apiKey}&query=${cityName} building&orientation=landscape`\n      );\n      console.log(res.data);\n      return res.data.results;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const addCity = async cityId => {\n    if (citiesList && citiesList.find(item => item.cityId === cityId)) {\n      alert(\"This city has been already added to cities list\");\n      return;\n    }\n    let weather = await getWeather(cityId);\n    let photo = await getPhoto(weather.name);\n    const newItem = {\n      name: weather.name,\n      timezone: weather.timezone,\n      windSpeed: weather.wind.speed,\n      temp: weather.main.temp,\n      feelsLike: weather.main.feels_like,\n      sunrise: weather.sys.sunrise,\n      sunset: weather.sys.sunset,\n      title: weather.weather[0].main,\n      description: weather.weather[0].description,\n      cityId: weather.id,\n      photo: photo[Math.ceil(Math.random() * 5)].urls.regular\n    };\n    if (newItem) {\n      const newList = citiesList ? [...citiesList, newItem] : [newItem];\n      setCitiesList(newList);\n    }\n  };\n  useEffect(() => {\n    const activeCityId = history.location.pathname.split(\"city/\")[1];\n    if (citiesList) {\n      const activeCity = citiesList.find(\n        city => city.cityId === Number(activeCityId)\n      );\n      setActiveItem(activeCity);\n    }\n  }, [citiesList, history.location.pathname]);\n\n  return (\n    <div className=\"weather-app\">\n      <div className=\"weather-app__sidebar sidebar\">\n        <Logo />\n        {citiesList && (\n          <CitiesList\n            activeItem={activeItem}\n            onClickItem={citiesList => {\n              history.push(`/city/${citiesList.cityId}`);\n            }}\n            citiesList={citiesList.map(item => {\n              return {\n                cityId: item.cityId,\n                name: item.name,\n                activeItem: Number(item.cityId) === activeItem ? true : false\n              };\n            })}\n          />\n        )}\n      </div>\n      <div className=\"weather-app__main city\">\n        <Route exact path=\"/weather-react-app/\">\n          <AddCity addCity={addCity} />\n        </Route>\n        <Route path=\"/city/\">\n          {!citiesList && (\n            <Redirect\n              to={{\n                pathname: \"/weather-react-app//\"\n              }}\n            />\n          )}\n          {citiesList && <City cities={citiesList} />}\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}